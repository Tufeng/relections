1、查看文件的两个版本之间的差异如何帮助你了解引入的错误？
答：通过比较两个版本之间的差异，可以清楚地看到我前后修改的位置和内容，
在手误或者修改错误时能够及时通过对比发现。再者，可以在修改造成严重后果时，
及时回滚。
2、从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？
答：编程的整个过程也是一个逻辑实现的过程。能够查看整个历史记录，
编程者就可以及时梳理，回顾逻辑形成的过程，便于后期的拓展，以及对整个代码的
管控。
3、你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？
答：自己提交，如果按照要求：也就是为每项合理的逻辑更改进行一次提交。
它的重点在于：逻辑更改。同上一思考的答案类似，这将使开发者能够：清晰、准确地回顾
开发历程，并且更好地控制开发进度，以致于它可以按照原有的方向稳步前进。如果像是Google Docs
那样自动保存，那就必须设置一个时间点，而以时间为节点的保存，可能将不同类型的修改进行保存，
且没有归类说明，这为之后的回顾检查代码，埋下了隐患。假设设置每一个小时保存，
你要看某一天的某一项修改，你不记得具体是几点修改，那你就得对比当天所有的提交记录，以便找到
答案，耗时耗力。但是向Google Doc这种纯文本编辑器，你做的修改很单一，就是文字编辑或者排版变化
，各个文件间相互内在关系较强，很容易找到历史版本，手动提交反而麻烦。
4、何你认为一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）
单独对待每个文件？
答：Google Doc的用途单一，一般不会相互交叉作用的情况。而对于编程开发，最后的产品虽然独立、单一，
但是形成产品的各个部分却不是单一一个文件，为了形成一个简单的产品上的功能，需要文件之间进行协作。
同时提交多个文件，保留这个功能形成各个文件的变化，在改进产品功能时，意义重大。
5、如何使用命令 git log 和 git diff 来查看文件的历史记录？
答：用cd打开库 使用 git log输出记录 依照关键词找出需要查看的文件所在的commit 复制commit
的唯一ID  使用git diff 旧文件ID 新文件ID进行查看。注意：鉴于viewport的大小，内容会溢出视窗，
按向下箭头或者enter，一直查看，直到出现：END。
6、使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
答：这叫有备无患。可以最大地去实验各种可能。
7、现在你已设置了工作空间，你想尝试使用 Git 来做些什么？
答：哈哈 终于配置成功了。目前为止，还是觉得commit的运用大一些，需要用git来启动编辑器，有点鸡肋。
可能是还没到一定高度，太浅薄。
